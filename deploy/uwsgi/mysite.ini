# /usr/share/uwsgi/conf/default.ini
# [uwsgi]
# declare-option = deb-confnamespace=$1
# declare-option = deb-confname=$1
# master = true
# workers = 2
# no-orphans = true
# pidfile = /run/uwsgi/%(deb-confnamespace)/%(deb-confname)/pid
# socket = /run/uwsgi/%(deb-confnamespace)/%(deb-confname)/socket
# chown-socket = www-data
# chmod-socket = 660
# log-date = true
# uid = www-data
# gid = www-data

[uwsgi]

basedir = /home/demo/django/itnsa
project = mysite

# support python3
plugin = python3

# support threads for python
enable-threads = yes

# set PYTHONHOME/virtualenv
home = %(basedir)/.venv
# virtualenv =  %(basedir)/.venv
# venv = %(basedir)/.venv

# chdir to specified directory before apps loading
chdir = %(basedir)/%(project)

# load .wsgi file
wsgi-file = %(project)/wsgi.py
# module = mysite.wsgi

# set environment variable
# env = DJANGO_SETTINGS_MODULE=mysite.settings.product
# the same as setting in wsgi.py
# os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings.product')

# spawn the specified number of workers/processes
workers = 5
# processes = 5

# run each worker in prethreaded mode with the specified number of threads
threads = 2

# serialize accept() usage if possible)
thunder-lock = true

# set harakiri timeout
harakiri = 30

# clear environment on exit
vacuum = true

# limit the project to 128 MB
limit-as = 128

# respawn processes after serving 5000 requests
max-requests = 5000

# background the process & log
# daemonize = /var/log/uwsgi/yourproject.log

# disable request loggin
disable-logging = true

# Systemd and uWSGI have different ideas about what the SIGTERM signal should do to an application.
# die-on-term = true